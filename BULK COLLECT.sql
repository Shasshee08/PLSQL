DECLARE
    TYPE EMP_TABLE IS TABLE OF EMP_LARGE.SAL%TYPE;
    EMP_SALARIES EMP_TABLE;
    BEGIN
    SELECT SAL BULK COLLECT INTO EMP_SALARIES FROM EMP_LARGE;
    
    FOR I IN EMP_SALARIES.FIRST .. EMP_SALARIES.LAST LOOP
    DBMS_OUTPUT.PUT_LINE('SALARY: '||EMP_SALARIES(I));
    END LOOP;
    END;
    /
    
    --==================
    DECLARE
    TYPE EMP_TABLE IS TABLE OF EMP_LARGE.EMPNO%TYPE;
    EMP_IDS EMP_TABLE;
    BEGIN
    SELECT EMPNO BULK COLLECT INTO EMP_IDS FROM EMP_LARGE WHERE SAL>2000;
    FOR I IN EMP_IDS.FIRST .. EMP_IDS.LAST LOOP
    DBMS_OUTPUT.PUT_LINE('EMPLOYEE ID: '||EMP_IDS(I));
    END LOOP;
    END;
    /
    
    --===================
    DECLARE
    TYPE EMP_TABLE IS TABLE OF EMP_LARGE.EMPNO%TYPE;
    EMP_IDS EMP_TABLE;
    CURSOR EMP_CURSOR IS SELECT EMPNO FROM EMP_LARGE;
    BEGIN
    OPEN EMP_CURSOR;
    LOOP
    FETCH EMP_CURSOR BULK COLLECT INTO EMP_IDS LIMIT 100;
    EXIT WHEN EMP_IDS.COUNT=0;
    
    FOR I IN EMP_IDS.FIRST .. EMP_IDS.LAST LOOP
    DBMS_OUTPUT.PUT_LINE('Employee ID: ' || emp_ids(i));
        END LOOP;
    END LOOP;
    
    CLOSE emp_cursor;
END;
/

---==================
  DECLARE
    TYPE EMP_TABLE IS TABLE OF EMP_LARGE%ROWTYPE;
    EMP_DATA EMP_TABLE;
BEGIN
    -- Fetch all employee records at once
    SELECT * BULK COLLECT INTO EMP_DATA FROM EMP_LARGE;

    -- Insert data into backup table using FORALL
    FORALL I IN EMP_DATA.FIRST .. EMP_DATA.LAST
        INSERT INTO EMPLOYEES_BACKUP VALUES EMP_DATA(I); -- ? Corrected

    DBMS_OUTPUT.PUT_LINE('Data migrated successfully.');
END;
/

SELECT * FROM EMPLOYEES_BACKUP;


CREATE TABLE EMPLOYEES_BACKUP AS SELECT * FROM EMP_LARGE WHERE 1=2; -- Creates empty backup table
